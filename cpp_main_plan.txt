С++ OTUS. План занятий.

Summary and date lections:
	1. Система сборки: build, test and deploy .............. 27 марта, пятница 		
	2. Особенности C++11. auto, lambda, tuple .............. 3 апреля, пятница	
	3. Особенности C++11. Move, variadic templates ......... 8 апреля, среда
	4. Сравнение C++11/C++14 с С++ 03 ...................... 10 апреля, пятница
	5. Обзор C++17. Constexpr lambda. 
		Fold expression. Attributes. Type deduction ........ 15 апреля, среда
	6. Обзор C++17. If constexpr. Structured bindings. 
		Statements with initializer. std::filesystem ....... 17 апреля, пятница
	7. Реализация умных указателей ......................... 22 апреля, среда
	8. Идея аллокаторов .................................... 24 апреля, пятница
	9. Шаблонная магия 	.................................... 29 апреля, среда

	10. Принципы проектирования ПО ......................... 6 мая, среда	
	11. GRASP .............................................. 8 мая, пятница
	12. Шаблоны GoF. Порождающие ........................... 13 мая, среда
	13. Шаблоны GoF. Структурные ........................... 15 мая, пятница
	14. Шаблоны GoF. Поведенческие. Command, Interpreter, 
		Iterator, Mediator, Memento, 
		Chain of responsibilily ............................ 20 мая, среда
	15. Шаблоны GoF. Поведенческие. Observer, State, 
		Strategy, Template method, Visitor ................. 22 мая, пятница
	16. STL. Контейнеры .................................... 27 мая, среда
	17. STL. Алгоритмы ..................................... 29 мая, пятница
	18. Boost. Разное ......................................
	19. Boost. Паттерны проектирования .....................
	20. Многопоточность ....................................
	21. Шаблоны 5 ..........................................
	22. Асинхронное программирование .......................
	23. Lockfree DS ........................................
	24. Атомарные типы данных
	25. Сетевое взаимодействие
	26. Асинхронный ввод/вывод
	27. РСУБД
	28. Key Value
	29. Много данных
	30. ORM
	31. Dlib. Кластеризация
	32. Dlib. Классификация
	33. Dlib. Регрессия
	

======================================== Первый месяц ========================================
1. Система сборки: build, test and deploy.
	Цели занятия
		познакомиться;
		понять, как будем работать;
		узнать, с кем и как общаться;
		понять, зачем нужна автоматизация сборки;
		расшифровывать аббревиатуру CI/CD;
		подготовить стенд для выполнения самостоятельных работ.

	Краткое содержание
		окружение программиста: команда программистов, менеджеры, администраторы;
		личный кабинет: что делать, где сдавать, куда выкладывать результат;
		настройка стенда для выполнения ДЗ.

	Результаты
		стенд для выполнения ДЗ.

	
	Домашнее задание
		ДЗ-1. Сборка и публикация пакета
		Цель: В это самостоятельной работе создаём сборочную ферму для работы по схеме CI/CD на протяжении всего курса.
		Что требуется сделать:
		1. Выполнить задание, описанное в 01.homework.pdf
		2. Отправить на проверку в "Чат с преподавателем":
			- ссылку на свой репозиторий на guthub.com с реализованным проектом;
			- ссылку на проект на travis-ci.org с историей (и хотя бы одной успешной) сборок;
			- ссылку на репозиторий bintray.com, откуда можно скачать получившийся deb-пакет.
	Рекомендуем сдать до: 07.04.2020

2. Особенности C++11. auto, lambda, tuple
	Цели занятия
		освежить основы по C++11 (пригодится дальше по курсу);
		узнать новые фичи C++11 (тоже пригодится);
		обсудить особенности, которые важно учитывать.

	Краткое содержание
		обсуждение ДЗ;
		online-инструменты;
		ключевое слово auto;
		замыкания (они же лямбды);
		кортежи.

	Результаты
		список особенностей С++11.
	
	Дата и время
		3 апреля, пятница в 20:00
	
3. Особенности C++11. Move, variadic templates
	Цели занятия
		освежить основы по C++11 (пригодится дальше по курсу);
		узнать новые детали;
		обсудить особенности, которые стоит учитывать.

	Краткое содержание
		decltype;
		rvalue и lvalue ссылки;
		move semantic;
		variadic Templates;
		POD.

	Результаты
		расширение списка особенностей С++11.
	Дата и время
		8 апреля, среда в 20:00
	
	Домашнее задание
		ДЗ-02. Фильтрация IP-адресов
		Цель: В это самостоятельной работе применяем изученные на занятиях возможности новых стандартов языка (C++11/C++14). Используем ранее созданную сборочную ферму.
		Что требуется сделать:
		1. Выполнить задание описанное в 02.homework.pdf

		2. Зарегистрироваться в http://acm.timus.ru
		Решить первые пять простых задач:
		1001 1000 1785 1293 2012

		3. Опционально!
		Реализовать constexpr-функцию нахождения ближайшей большей степени двойки
		https://goo.gl/CBfjE9

		4. Отправить на проверку в "Чат с преподавателем":
		- ссылку на свой репозиторий на guthub.com с реализованным проектом;
		- ссылку на проект на travis-ci.org с историей (и хотя бы одной успешной) сборок;
		- ссылку на репозиторий bintray.com, откуда можно скачать получившийся deb-пакет;
		- ссылку на аккаунт на acm.timus.ru со списком принятых задач.
		Критерии оценки: 1.
		cat ip_filter.tsv | ip_filter | md5sum
		24e7a7b2270daee89c64d3ca5fb3da1a -

		Рекомендуем сдать до: 23.04.2020


4. Сравнение C++11/C++14 с С++ 03
	Цели занятия
		освежить знания по C++14;
		узнать новые детали;
		обсудить особенности С++ 14, на которые стоит обратить внимание.

	Краткое содержание
		семантика перемещения;
		двоичные константы;
		пользовательские литералы или странный оператор "operator";
		static_assert;
		using;
		nullptr и nullptr_t;
		enum class;
		constexpr;
		override, final;
		default, delete;
		ranged for. Delegate ctor;
		data member initializers;
		braced initialization. Initializer_list.

	Результаты
		отличия C++11/14 от С++03.

	Дата и время
		10 апреля, пятница в 20:00
	
5. Обзор C++17. Constexpr lambda. Fold expression. Attributes. Type deduction
	Цели занятия
		разобраться с основными нововведениями С++ 17;
		понять, в каких случаях они используются;
		обойти несколько спорных моментов.

	Краткое содержание
		constexpr lambda;
		fold expression. Attributes;
		type deduction;
		auto template parameter;
		trigraph (only for fun).

	Результаты
		список фич С++17.

		Дата и время
		15 апреля, среда в 20:00
6. Обзор C++17. If constexpr. Structured bindings. Statements with initializer. std::filesystem
	Цели занятия
		разобраться с основными нововведениями С++17;
		понять кейсы использования;
		обсудить несколько тонких моментов;
		пользоваться новым стандартом языка.

	Краткое содержание
		if constexpr VS define;
		inline variables/ Structured bindings/ If/switch/ Statements with initializer;
		std::filesystem. Undefined behaviour.

	Результаты
		обширный список нововведений C++17.

	Дата и время
		17 апреля, пятница в 20:00

7. Реализация умных указателей
	Цели занятия
		запомнить правило: "взял память - верни, когда больше не нужна";
		понять, как следовать этому правилу;
		разобраться с разными типами умных указателей.

	Краткое содержание
		область видимости;
		время жизни;
		проблемы управления ресурсами;
		глупый умный указатель;
		unique_ptr. Shared_ptr;
		weak_ptr;
		enable_shared_from_this.
	Результаты
		реализованный умный указатель, с которым можно экспериментировать дальше.
	Дата и время
		22 апреля, среда в 20:00	

8. Идея аллокаторов
	Цели занятия
		объяснить важность стратегий аллокации памяти;
		использовать разные аллокаторы,
		разобраться, как реализовать свой аллокатор;
		объяснить, как расширяется std::vector, и почему именно так.

	Краткое содержание
		стандартный аллокатор и его недостатки;
		различные методы управлением памятью, их достоинства и недостатки;
		как можно повлиять на ситуацию.
		Std::allocator;
		Std::allocator_traits.

	Результаты
		заготовка аллокатора для самостоятельной работы.

	Дата и время
		24 апреля, пятница в 20:00
		
	Домашнее задание
		ДЗ-03. allocator
		Цель: В это самостоятельной работе реализуем собственный аллокатор, используем его в стандартных контейнерах. Пишем свой контейнер и пробуем использовать аллокатор.
		Что требуется сделать:
		1. Выполнить задание описанное в 03.homework.pdf

		2. На acm.timus.ru выполнить задачи:
		1409, 1877, 2001, 1264, 1787

		3. Отправить на проверку в "Чат с преподавателем":
		- ссылку на свой репозиторий на guthub.com;
		- ссылку на проект на travis-ci.org;
		- ссылку на репозиторий bintray.com;
		- ссылку на аккаунт на acm.timus.ru со списком принятых задач.
		Рекомендуем сдать до: 05.05.2020
	
9. Шаблонная магия
	Цели занятия
		перестать бояться шаблонов;
		пообещать себе перестать пользоваться макросами,
		читать STL;
		искать документацию.

	Краткое содержание
		эволюция шаблонов;
		современное положение дел;
		метафункции;
		рекурсия и условия;
		документация;
		SFINAE.

	Результаты
		искать информацию, если что-то непонятно.

	Дата и время
		29 апреля, среда в 20:00

======================================== Второй месяц ========================================

10. Принципы проектирования ПО	
	Цели занятия
		разобраться, зачем нужны принципы;
		пользоваться принципами,
		читать UML диаграммы.

	Краткое содержание
		UML;
		принципы: SoC, DRY, YAGNI, KISS, TDA, LoD, SOLID.

	Результаты
		перечень полезных при разработке ПО принципов.

	Дата и время
		6 мая, среда в 20:00
		
	Домашнее задание
		ДЗ-04. Doxygen
		Цель: В это самостоятельной работе применяем полученные знания про шаблоны, реализуем функционал вывода IP-адреса в общем виде, подключаем к своему проекту doxygen и генерируем документацию.
		Что требуется сделать:
		1. Выполнить задание описанное в 04.homework.pdf

		2. Решить первые 15 задач на acm.timus.ru (от простых к сложным). Отсортированный по сложности список:
		http://acm.timus.ru/problemset.aspx?space=1&page=all&skipac=False&sort=difficulty

		3. Сделать ревью решений ДЗ-02 двух коллег (которые его выполнили)

		4. Опционально: предоставить примеры, из своей практики, использования Принципов Проектирования

		5. Отправить на проверку в "Чат с преподавателем":
		- ссылку на свой репозиторий на guthub.com;
		- ссылку на проект на travis-ci.org;
		- ссылку на репозиторий bintray.com;
		- ссылку на аккаунт на acm.timus.ru со списком принятых задач;
		- ссылки на выполненные ревью.
		Рекомендуем сдать до: 12.05.2020
		
11. GRASP
	Цели занятия
		обращать внимание на архитектурные детали кода;
		улучшать метрики кода;
		находить ошибки в коде коллег.

	Краткое содержание
		indirection;
		low Coupling;
		polymorphism;
		protected Variations;
		creator;
		controller;
		pure Fabrication;
		information Expert;
		high Cohesion.

	Результаты
		конспект лекции.

	Дата и время
		8 мая, пятница в 20:00
12. Шаблоны GoF. Порождающие
	Цели занятия
		читать паттерны проектирования;
		использовать паттерны;
		объяснить ценность экспериментов.

	Краткое содержание
		одиночка (Singleton);
		пул одиночек (Multiton);
		пул объектов (Object pool);
		фабричный метод (Factory method);
		абстрактная фабрика (Abstract factory);
		строитель (Builder);
		прототип (Prototype);
		внедрение зависимости (Dependency Injection);
		ленивая инициализация (Lazy initialization).

	Результаты
		набор полезных паттернов для решения повседневных проблем.

	Дата и время
		13 мая, среда в 20:00
	Домашнее задание
		ДЗ-05. Editor.
		Цель: В это самостоятельной работе разрабатываем архитектуру проекта, применяем полученные знания принципов проектирования, используем паттерны, генерируем документацию.
		Что требуется сделать:
		1. Выполнить задание, описанное в 05.homework.pdf

		2. На acm.timus.ru решить любые 3 задачи с уровнем сложности от 100 до 150.
		Отсортированный по сложности список:
		http://acm.timus.ru/problemset.aspx?space=1&page=all&skipac=False&sort=difficulty
		Если выбрать сложно, есть ещё списки задач по темам (ближе к концу страницы):
		http://acm.timus.ru/problemset.aspx

		3. Сделать ревью решений ДЗ-03 двух коллег (которые его выполнили).

		4. Опционально: сделать ревью на ревью ДЗ-02.

		5. Отправить на проверку в "Чат с преподавателем":
		- ссылку на свой репозиторий на guthub.com;
		- ссылку на проект на travis-ci.org;
		- ссылку на репозиторий bintray.com;
		- ссылку на аккаунт на acm.timus.ru со списком принятых задач;
		- ссылки на выполненные ревью;
		- опционально: ссылку на ревью на ревью.
		Рекомендуем сдать до: 19.05.2020
		
13. Шаблоны GoF. Структурные
	Цели занятия
		читать паттерны проектирования;
		использовать паттерны;
		объяснить ценность экспериментов.

	Краткое содержание
		адаптер (Adapter);
		мост (Bridge);
		компоновщик (Composite);
		декоратор (Decorator);
		фасад (Facade);
		приспособленец (Flyweight);
		заместитель (Proxy).

	Результаты
		набор полезных паттернов для решения повседневных проблем.

	Дата и время
		15 мая, пятница в 20:00

14. Шаблоны GoF. Поведенческие. Command, Interpreter, Iterator, Mediator, Memento, Chain of responsibilily
	Цели занятия
		читать паттерны проектирования;
		использовать паттерны;
		объяснить ценность экспериментов.

	Краткое содержание
		команда (Command);
		интерпретатор (Interpreter);
		итератор (Iterator);
		посредник (Mediator);
		хранитель (Memento);
		цепочка ответственности (Chain of responsibilily).

	Результаты
		набор полезных паттернов для решения повседневных проблем.

	Дата и время
		20 мая, среда в 20:00
	Домашнее задание
		ДЗ-06. Matrix.
		Цель: В это самостоятельной работе создаём проект бесконечной разряженной матрицы с использованием паттернов проектирования, не забываем про принципы и документацию.
		Что требуется сделать:
		1. Выполнить задание, описанное в 06.homework.pdf

		2. На acm.timus.ru решить любые 3 задачи с уровнем сложности от 151 до 200.
		Отсортированный по сложности список:
		http://acm.timus.ru/problemset.aspx?space=1&page=all&skipac=False&sort=difficulty
		Если выбрать сложно, есть ещё списки задач по темам (ближе к концу страницы):
		http://acm.timus.ru/problemset.aspx

		3. Сделать ревью решений ДЗ-04 двух коллег (которые его выполнили).

		4. Опционально: сделать ревью на РЕВЬЮ ДЗ-03.

		5. Отправить на проверку в "Чат с преподавателем":
		- ссылку на свой репозиторий на guthub.com;
		- ссылку на проект на travis-ci.org;
		- ссылку на репозиторий bintray.com;
		- ссылку на аккаунт на acm.timus.ru со списком принятых задач;
		- ссылки на выполненные ревью;
		- опционально: ссылку на ревью на ревью.
		Рекомендуем сдать до: 26.05.2020
		
15. Шаблоны GoF. Поведенческие. Observer, State, Strategy, Template method, Visitor
	Цели занятия
		читать паттерны проектирования;
		использовать паттерны;
		объяснить ценность экспериментов.

	Краткое содержание
		наблюдатель (Observer);
		состояние (State);
		стратегия (Strategy);
		шаблонный метод (Template method);
		посетитель (Visitor).

	Результаты
		набор полезных паттернов для решения повседневных проблем.

	Дата и время
		22 мая, пятница в 20:00

16. STL. Контейнеры
	Цели занятия
		изучить контейнеры STL;
		объяснить, какие типы контейнеров есть в STL;
		настраивать поведение контейнеров.

	Краткое содержание
		последовательные контейнеры;
		ассоциативные;
		неупорядоченные ассоциативные.

	Результаты
		список контейнеров на все случаи жизни.

	Дата и время
		27 мая, среда в 20:00
	Домашнее задание
		ДЗ-07. cmd
		Цель: В это самостоятельной работе реализуем проект обработки последовательностей команд фиксированного и произвольного размера. Стремимся к снижению зависимостей между модулями.
		Что требуется сделать:
		1. Выполнить задание, описанное в 07.homework.pdf

		2. На acm.timus.ru решить 3 любые задачи с уровнем сложности от 201 до 300.
		Отсортированный по сложности список:
		http://acm.timus.ru/problemset.aspx?space=1&page=all&skipac=False&sort=difficulty
		Если выбрать сложно, есть ещё списки задач по темам (ближе к концу страницы):
		http://acm.timus.ru/problemset.aspx

		3. Сделать ревью решений ДЗ-05 двух коллег (которые его выполнили).

		4. Опционально: сделать ревью на ревью ДЗ-04.

		5. Отправить на проверку в "Чат с преподавателем":
		- ссылку на свой репозиторий на guthub.com;
		- ссылку на проект на travis-ci.org;
		- ссылку на репозиторий bintray.com;
		- ссылку на аккаунт на acm.timus.ru со списком принятых задач;
		- ссылки на выполненные ревью;
		- опционально: ссылку на ревью на ревью.
		Рекомендуем сдать до: 28.05.2020
17. STL. Алгоритмы
	Цели занятия
		разобраться, почему алгоритмов в STL так много;
		объяснить, зачем нужны алгоритмы в STL;
		использовать алгоритмы.

	Краткое содержание
		поиск;
		сортировка;
		модифицирующие алгоритмы;
		немодифицирующие;
		численные алгоритмы;
		перестановки.

	Результаты
		список алгоритмов на все случаи жизни.

	Дата и время
		29 мая, пятница в 20:00

======================================== Третий месяц ========================================
18. Boost. Разное
	Цели занятия
		объяснить философию проекта Boost;
		читать документациию Boost,
		выбирать и применять библиотеки7

	Краткое содержание
		философия boost;
		CMake+boost;
		boost::bimap;
		boost::multi_index;
		boost::circular_buffer;
		boost::fusion;
		boost::HANA;
		boost::MPL;
		boost::program_options.

	Результаты
		готовый к использованию cmake-скрипт, ссылка на документацию baby-steps.

	Дата и время
		3 июня, среда в 20:00
		
19. Boost. Паттерны проектирования
20. Многопоточность
21. Шаблоны 5
22. Асинхронное программирование
23. Lockfree DS
24. Атомарные типы данных
25. Сетевое взаимодействие
26. Асинхронный ввод/вывод
27. РСУБД

======================================== Четвертый месяц ========================================
28. Key Value
29. Много данных
30. ORM
31. Dlib. Кластеризация
32. Dlib. Классификация
33. Dlib. Регрессия

Проектная работа


